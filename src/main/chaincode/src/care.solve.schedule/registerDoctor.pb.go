// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registerDoctor.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	registerDoctor.proto

It has these top-level messages:
	Patient
	Doctor
	DoctorCollection
	Schedule
	Slot
	RegistrationInfo
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DoctorFunctions int32

const (
	DoctorFunctions_DOCTOR_CREATE    DoctorFunctions = 0
	DoctorFunctions_DOCTOR_GET_BY_ID DoctorFunctions = 1
	DoctorFunctions_DOCTOR_GET_ALL   DoctorFunctions = 2
)

var DoctorFunctions_name = map[int32]string{
	0: "DOCTOR_CREATE",
	1: "DOCTOR_GET_BY_ID",
	2: "DOCTOR_GET_ALL",
}
var DoctorFunctions_value = map[string]int32{
	"DOCTOR_CREATE":    0,
	"DOCTOR_GET_BY_ID": 1,
	"DOCTOR_GET_ALL":   2,
}

func (x DoctorFunctions) String() string {
	return proto.EnumName(DoctorFunctions_name, int32(x))
}
func (DoctorFunctions) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PatientFunctions int32

const (
	PatientFunctions_PATIENT_CREATE    PatientFunctions = 0
	PatientFunctions_PATIENT_GET_BY_ID PatientFunctions = 1
)

var PatientFunctions_name = map[int32]string{
	0: "PATIENT_CREATE",
	1: "PATIENT_GET_BY_ID",
}
var PatientFunctions_value = map[string]int32{
	"PATIENT_CREATE":    0,
	"PATIENT_GET_BY_ID": 1,
}

func (x PatientFunctions) String() string {
	return proto.EnumName(PatientFunctions_name, int32(x))
}
func (PatientFunctions) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ScheduleFunctions int32

const (
	ScheduleFunctions_SCHEDULE_CREATE          ScheduleFunctions = 0
	ScheduleFunctions_SCHEDULE_GET_BY_OWNER_ID ScheduleFunctions = 1
)

var ScheduleFunctions_name = map[int32]string{
	0: "SCHEDULE_CREATE",
	1: "SCHEDULE_GET_BY_OWNER_ID",
}
var ScheduleFunctions_value = map[string]int32{
	"SCHEDULE_CREATE":          0,
	"SCHEDULE_GET_BY_OWNER_ID": 1,
}

func (x ScheduleFunctions) String() string {
	return proto.EnumName(ScheduleFunctions_name, int32(x))
}
func (ScheduleFunctions) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SlotFunctions int32

const (
	SlotFunctions_SLOT_CREATE SlotFunctions = 0
	SlotFunctions_SLOT_UPDATE SlotFunctions = 1
)

var SlotFunctions_name = map[int32]string{
	0: "SLOT_CREATE",
	1: "SLOT_UPDATE",
}
var SlotFunctions_value = map[string]int32{
	"SLOT_CREATE": 0,
	"SLOT_UPDATE": 1,
}

func (x SlotFunctions) String() string {
	return proto.EnumName(SlotFunctions_name, int32(x))
}
func (SlotFunctions) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Slot_Type int32

const (
	Slot_FREE Slot_Type = 0
	Slot_BUSY Slot_Type = 1
)

var Slot_Type_name = map[int32]string{
	0: "FREE",
	1: "BUSY",
}
var Slot_Type_value = map[string]int32{
	"FREE": 0,
	"BUSY": 1,
}

func (x Slot_Type) String() string {
	return proto.EnumName(Slot_Type_name, int32(x))
}
func (Slot_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type Patient struct {
	PatientId string `protobuf:"bytes,1,opt,name=PatientId" json:"PatientId,omitempty"`
}

func (m *Patient) Reset()                    { *m = Patient{} }
func (m *Patient) String() string            { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()               {}
func (*Patient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Patient) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

type Doctor struct {
	DoctorId  string `protobuf:"bytes,1,opt,name=DoctorId" json:"DoctorId,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName" json:"LastName,omitempty"`
}

func (m *Doctor) Reset()                    { *m = Doctor{} }
func (m *Doctor) String() string            { return proto.CompactTextString(m) }
func (*Doctor) ProtoMessage()               {}
func (*Doctor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Doctor) GetDoctorId() string {
	if m != nil {
		return m.DoctorId
	}
	return ""
}

func (m *Doctor) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Doctor) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type DoctorCollection struct {
	Doctors []*Doctor `protobuf:"bytes,1,rep,name=doctors" json:"doctors,omitempty"`
}

func (m *DoctorCollection) Reset()                    { *m = DoctorCollection{} }
func (m *DoctorCollection) String() string            { return proto.CompactTextString(m) }
func (*DoctorCollection) ProtoMessage()               {}
func (*DoctorCollection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DoctorCollection) GetDoctors() []*Doctor {
	if m != nil {
		return m.Doctors
	}
	return nil
}

type Schedule struct {
	ScheduleId string  `protobuf:"bytes,1,opt,name=ScheduleId" json:"ScheduleId,omitempty"`
	OwnerId    string  `protobuf:"bytes,2,opt,name=OwnerId" json:"OwnerId,omitempty"`
	Slots      []*Slot `protobuf:"bytes,3,rep,name=slots" json:"slots,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Schedule) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

func (m *Schedule) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Schedule) GetSlots() []*Slot {
	if m != nil {
		return m.Slots
	}
	return nil
}

type Slot struct {
	SlotId           string            `protobuf:"bytes,1,opt,name=SlotId" json:"SlotId,omitempty"`
	TimeStart        uint64            `protobuf:"varint,2,opt,name=TimeStart" json:"TimeStart,omitempty"`
	TimeFinish       uint64            `protobuf:"varint,3,opt,name=TimeFinish" json:"TimeFinish,omitempty"`
	Avaliable        Slot_Type         `protobuf:"varint,4,opt,name=avaliable,enum=main.Slot_Type" json:"avaliable,omitempty"`
	RegistrationInfo *RegistrationInfo `protobuf:"bytes,5,opt,name=registrationInfo" json:"registrationInfo,omitempty"`
}

func (m *Slot) Reset()                    { *m = Slot{} }
func (m *Slot) String() string            { return proto.CompactTextString(m) }
func (*Slot) ProtoMessage()               {}
func (*Slot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Slot) GetSlotId() string {
	if m != nil {
		return m.SlotId
	}
	return ""
}

func (m *Slot) GetTimeStart() uint64 {
	if m != nil {
		return m.TimeStart
	}
	return 0
}

func (m *Slot) GetTimeFinish() uint64 {
	if m != nil {
		return m.TimeFinish
	}
	return 0
}

func (m *Slot) GetAvaliable() Slot_Type {
	if m != nil {
		return m.Avaliable
	}
	return Slot_FREE
}

func (m *Slot) GetRegistrationInfo() *RegistrationInfo {
	if m != nil {
		return m.RegistrationInfo
	}
	return nil
}

type RegistrationInfo struct {
	Description string `protobuf:"bytes,1,opt,name=Description" json:"Description,omitempty"`
	AttendeeId  string `protobuf:"bytes,2,opt,name=AttendeeId" json:"AttendeeId,omitempty"`
}

func (m *RegistrationInfo) Reset()                    { *m = RegistrationInfo{} }
func (m *RegistrationInfo) String() string            { return proto.CompactTextString(m) }
func (*RegistrationInfo) ProtoMessage()               {}
func (*RegistrationInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RegistrationInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RegistrationInfo) GetAttendeeId() string {
	if m != nil {
		return m.AttendeeId
	}
	return ""
}

func init() {
	proto.RegisterType((*Patient)(nil), "main.Patient")
	proto.RegisterType((*Doctor)(nil), "main.Doctor")
	proto.RegisterType((*DoctorCollection)(nil), "main.DoctorCollection")
	proto.RegisterType((*Schedule)(nil), "main.Schedule")
	proto.RegisterType((*Slot)(nil), "main.Slot")
	proto.RegisterType((*RegistrationInfo)(nil), "main.RegistrationInfo")
	proto.RegisterEnum("main.DoctorFunctions", DoctorFunctions_name, DoctorFunctions_value)
	proto.RegisterEnum("main.PatientFunctions", PatientFunctions_name, PatientFunctions_value)
	proto.RegisterEnum("main.ScheduleFunctions", ScheduleFunctions_name, ScheduleFunctions_value)
	proto.RegisterEnum("main.SlotFunctions", SlotFunctions_name, SlotFunctions_value)
	proto.RegisterEnum("main.Slot_Type", Slot_Type_name, Slot_Type_value)
}

func init() { proto.RegisterFile("registerDoctor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x86, 0xe7, 0xd6, 0xcd, 0xc7, 0xc9, 0x9a, 0x38, 0x5a, 0x57, 0x4c, 0x29, 0xc3, 0x78, 0xb0,
	0x85, 0xc0, 0x0c, 0xcb, 0xee, 0x36, 0x76, 0x91, 0xc4, 0xce, 0x16, 0x08, 0x71, 0x90, 0x1d, 0x46,
	0x77, 0xb1, 0xe0, 0x3a, 0xea, 0x2a, 0x70, 0xac, 0x60, 0xa9, 0x1d, 0xfd, 0xcd, 0xfb, 0x13, 0x43,
	0x96, 0xbf, 0xe8, 0xae, 0xac, 0xf3, 0x9c, 0x73, 0x5e, 0xbd, 0xd2, 0xb1, 0xe0, 0x22, 0x23, 0xbf,
	0x29, 0x17, 0x24, 0x73, 0x59, 0x2c, 0x58, 0xe6, 0x1c, 0x33, 0x26, 0x18, 0xd2, 0x0f, 0x11, 0x4d,
	0xed, 0xf7, 0xd0, 0xde, 0x44, 0x82, 0x92, 0x54, 0xa0, 0x6b, 0xe8, 0x16, 0xcb, 0xe5, 0xde, 0xd4,
	0x2c, 0x6d, 0xd4, 0xc5, 0x35, 0xb0, 0x7f, 0x41, 0x4b, 0xb5, 0xa3, 0x2b, 0xe8, 0xa8, 0x55, 0x55,
	0x56, 0xc5, 0x52, 0x63, 0x41, 0x33, 0x2e, 0xd6, 0xd1, 0x81, 0x98, 0x27, 0x4a, 0xa3, 0x02, 0xb2,
	0x73, 0x15, 0x15, 0xc9, 0x53, 0xd5, 0x59, 0xc6, 0xf6, 0x67, 0x30, 0x94, 0xca, 0x9c, 0x25, 0x09,
	0x89, 0x05, 0x65, 0x29, 0x7a, 0x07, 0xed, 0x7d, 0xce, 0xb8, 0xa9, 0x59, 0xa7, 0xa3, 0xde, 0xe4,
	0xa5, 0x23, 0x4d, 0x3b, 0xaa, 0x10, 0x97, 0x49, 0xfb, 0x0e, 0x3a, 0x41, 0x7c, 0x4f, 0xf6, 0x0f,
	0x09, 0x41, 0x6f, 0x00, 0xca, 0x75, 0xe5, 0xaf, 0x41, 0x90, 0x09, 0x6d, 0xff, 0x4f, 0x4a, 0xa4,
	0x79, 0xe5, 0xaf, 0x0c, 0x91, 0x05, 0x67, 0x3c, 0x61, 0x82, 0x9b, 0xa7, 0xf9, 0x5e, 0xa0, 0xf6,
	0x0a, 0x12, 0x26, 0xb0, 0x4a, 0xd8, 0x7f, 0x35, 0xd0, 0x65, 0x8c, 0x2e, 0xa1, 0x25, 0xbf, 0xd5,
	0x06, 0x45, 0x24, 0x8f, 0x1f, 0xd2, 0x03, 0x09, 0x44, 0x94, 0x89, 0x5c, 0x5e, 0xc7, 0x35, 0x90,
	0xd6, 0x64, 0xb0, 0xa0, 0x29, 0xe5, 0xf7, 0xf9, 0x05, 0xe8, 0xb8, 0x41, 0xd0, 0x07, 0xe8, 0x46,
	0x8f, 0x51, 0x42, 0xa3, 0xdb, 0x84, 0x98, 0xba, 0xa5, 0x8d, 0xfa, 0x93, 0x41, 0x6d, 0xc2, 0x09,
	0x9f, 0x8e, 0x04, 0xd7, 0x15, 0x68, 0x06, 0x86, 0x1a, 0x6c, 0x16, 0xc9, 0xdb, 0x5a, 0xa6, 0x77,
	0xcc, 0x3c, 0xb3, 0xb4, 0x51, 0x6f, 0x72, 0xa9, 0xba, 0xf0, 0xb3, 0x2c, 0xfe, 0xaf, 0xde, 0xbe,
	0x02, 0x5d, 0xca, 0xa2, 0x0e, 0xe8, 0x0b, 0xec, 0x79, 0xc6, 0x0b, 0xb9, 0x9a, 0x6d, 0x83, 0x1b,
	0x43, 0xb3, 0x43, 0x30, 0x9e, 0x2b, 0x20, 0x0b, 0x7a, 0x2e, 0xe1, 0x71, 0x46, 0x8f, 0x12, 0x15,
	0xa7, 0x6f, 0x22, 0x79, 0xc8, 0xa9, 0x10, 0x24, 0xdd, 0x13, 0x52, 0x5d, 0x71, 0x83, 0x8c, 0xd7,
	0x30, 0x50, 0xe3, 0x5b, 0x3c, 0xa4, 0xf9, 0x94, 0x39, 0x1a, 0xc2, 0xb9, 0xeb, 0xcf, 0x43, 0x1f,
	0xef, 0xe6, 0xd8, 0x9b, 0x86, 0xd2, 0xc5, 0x05, 0x18, 0x05, 0xfa, 0xe6, 0x85, 0xbb, 0xd9, 0xcd,
	0x6e, 0xe9, 0x1a, 0x1a, 0x42, 0xd0, 0x6f, 0xd0, 0xe9, 0x6a, 0x65, 0x9c, 0x8c, 0xbf, 0x82, 0x51,
	0xfc, 0xa4, 0xb5, 0x20, 0x82, 0xfe, 0x66, 0x1a, 0x2e, 0xbd, 0x75, 0x58, 0x2b, 0xbe, 0x86, 0x61,
	0xc9, 0x1a, 0x92, 0xe3, 0x05, 0x0c, 0xcb, 0x9f, 0xa3, 0xee, 0x7f, 0x05, 0x83, 0x60, 0xfe, 0xdd,
	0x73, 0xb7, 0x2b, 0xaf, 0x16, 0xb8, 0x06, 0xb3, 0x82, 0x85, 0x82, 0xff, 0x63, 0xed, 0x61, 0xa5,
	0xf3, 0x11, 0xce, 0xe5, 0x90, 0x6a, 0x8d, 0x01, 0xf4, 0x82, 0x95, 0xdf, 0x30, 0x50, 0x82, 0xed,
	0xc6, 0x95, 0x40, 0x9b, 0x7d, 0x81, 0xb7, 0x71, 0x94, 0x11, 0x87, 0xb3, 0xe4, 0x91, 0xa8, 0x47,
	0x19, 0xb3, 0xc4, 0xe1, 0x85, 0x1d, 0x87, 0xa4, 0x82, 0x8a, 0xa7, 0x59, 0xbf, 0xf4, 0xb7, 0x91,
	0x15, 0xfc, 0x67, 0xfe, 0x6e, 0x6f, 0x5b, 0x79, 0xfd, 0xa7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x34, 0xba, 0x33, 0xbd, 0xdc, 0x03, 0x00, 0x00,
}
